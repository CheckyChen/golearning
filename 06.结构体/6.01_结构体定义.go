package main

// Go语言的关键字 type 可以将各种基本类型定义为自定义类型，基本类型包括整型、字符串、布尔等。结构体是一种复合的基本类型，
// 通过 type 定义为自定义类型后，使结构体更便于使用。

// 格式：
// type 类型名 struct{
//		字段1  字段1类型
//      字段2  字段2类型
//      ...
// }
// 对各个部分的说明：
// 类型名：标识自定义结构体的名称，在同一个包内不能重复。
//		struct{}：表示结构体类型，type 类型名 struct{} 可以理解为将 struct{} 结构体定义为类型名的类型。
//		字段1、字段2……：表示结构体字段名。结构体中的字段名必须唯一。
//		字段1类型、字段2类型……：表示结构体字段的类型。

// 包含一个x和y的点结构
type Pointer struct {
	X int
	Y int
}

// 如果是同种类型，字段可以写一行，如下表示颜色的结构体
type Color struct {
	R, G, B byte
}

// 结构体的定义只是一种内存布局的描述，只有当结构体实例化时，才会真正地分配内存
